- hosts: localhost
  roles:
    - name: openstack-environment
- hosts: "{{ prefix }}datastore"
  gather_facts: no
  vars:
    ansible_user: centos
  tasks:
    - name: Wait 600 seconds for target connection to become reachable/usable
      wait_for_connection:
    - name: Write the /etc/hosts file
      copy:
        content: |
          127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
          ::1         localhost localhost.localdomain localhost6 localhost6.localdomain6
          {% for host in ['datastore', 'esxi1', 'esxi2', 'vcenter'] %}
          {{ hostvars[prefix + host]['openstack']['addresses'][prefix + 'testlab'][0]['addr']}} {{ host }}.test {{ host }}
          {% endfor %}
        dest: /etc/hosts
      become: true
    - import_role:
        name: vmware-ci-nfs-share
      vars:
        vmware_ci_nfs_share_allow_ips:
            - "{{ hostvars[prefix + 'esxi1']['openstack']['addresses'][prefix + 'testlab'][0]['addr']}}"
            - "{{ hostvars[prefix + 'esxi2']['openstack']['addresses'][prefix + 'testlab'][0]['addr']}}"

- hosts: "{{ prefix }}vcenter"
  gather_facts: no
  vars:
    ansible_user: root
  tasks:
    - name: Write the /etc/hosts file
      copy:
        content: |
          127.0.0.1 localhost
          ::1  localhost ipv6-localhost ipv6-loopback
          {% for host in ['datastore', 'esxi1', 'esxi2', 'vcenter'] %}
          {{ hostvars[prefix + host]['openstack']['addresses']['testlab'][0]['addr']}} {{ host }}.test {{ host }}
          {% endfor %}
        dest: /etc/hosts
      # become: true
      register: hosts_status
    - name: Unconditionally reboot the machine with all defaults
      reboot:
      when: hosts_status.changed
    - name: "wait for the vcenter service"
      uri:
        url: "https://127.0.0.1"
        validate_certs: false
        return_content: yes
      register: result
      until:
          - "result.status == 200"
          - "'vmc-documentation-link' in result.content"
      retries: 180
      delay: 5

- hosts: localhost
  tasks:
    - debug: var=hostvars.datastore.ansible_host

- hosts: "{{ prefix }}esxi1,{{ prefix }}esxi2"
  gather_facts: no
  vars:
    ansible_ssh_common_args: "-o stricthostkeychecking=no -o userknownhostsfile=/dev/null -o ProxyCommand=\"ssh -W {{ hostvars[inventory_hostname]['openstack']['addresses']['testlab'][0]['addr'] }}:22 -q centos@{{ hostvars.datastore.ansible_host }}\""
    ansible_user: zuul
  tasks:
    - name: Write the /etc/hosts file
      copy:
        content: |
          127.0.0.1       localhost.localdomain localhost
          ::1             localhost.localdomain localhost
          {% for host in ['datastore', 'esxi1', 'esxi2', 'vcenter'] %}
          {{ hostvars[prefix + host]['openstack']['addresses']['testlab'][0]['addr']}} {{ host }}.test {{ host }}
          {% endfor %}
        dest: /etc/hosts
      # become: true
    - debug: var=inventory_hostname
    - command: "esxcli system hostname set --fqdn={{ inventory_hostname| regex_replace('^'+prefix,'') }}.test"
